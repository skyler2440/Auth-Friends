{"ast":null,"code":"var _jsxFileName = \"/home/skyler/school/Auth-Friends/auth-friends/src/components/LoginForm.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { signIn } from \"../actions\";\n\nfunction LogFrm({\n  errors,\n  touched\n}) {\n  const token = localStorage.getItem('token');\n  return React.createElement(\"div\", {\n    className: \"form-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Form, {\n    className: \"ui form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, touched.username && errors.username && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, errors.username), React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"User Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"ui button\",\n    type: \"submit\",\n    onClick: () => {\n      if (token) {\n        document.querySelector('.logout').classList.add('show-link');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nconst LoginForm = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"is required\"),\n    password: Yup.string().required(\"is required\")\n  }),\n\n  handleSubmit(values, formikBag) {\n    // console.log(formikBag);\n    formikBag.props.signIn(values); //   .then(() => {formikBag.props.props.history.push(\"/mytech\")});\n  }\n\n})(LogFrm); // const mapPropsToState= (state) => ({\n//   ...state,\n//   user: state.authReducer.user\n// })\n\nexport default connect(null, {\n  signIn\n})(LoginForm);","map":{"version":3,"sources":["/home/skyler/school/Auth-Friends/auth-friends/src/components/LoginForm.jsx"],"names":["React","connect","withFormik","Form","Field","Yup","signIn","LogFrm","errors","touched","token","localStorage","getItem","username","password","document","querySelector","classList","add","LoginForm","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","formikBag","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {signIn} from \"../actions\"\n\n\n\nfunction LogFrm({ errors, touched }) {\n  const token = localStorage.getItem('token');\n  return (\n    <div className=\"form-card\">\n    <h1>Login</h1>\n      <Form className=\"ui form\">\n\n        <div className=\"field\">\n            {touched.username && errors.username && <p>{errors.username}</p>}\n            <Field type=\"text\" name=\"username\" placeholder=\"User Name\" />\n        </div>\n\n        <div className=\"field\">\n            {touched.password && errors.password && <p>{errors.password}</p>}\n            <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\" onClick={() => {\n        if(token) {\n        document.querySelector('.logout').classList.add('show-link')\n        }\n        }}>\n          Login\n        </button>\n        \n      </Form>\n    </div>\n  );\n}\n\n\n\n\nconst LoginForm = withFormik({\n\n  mapPropsToValues({ username, password }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string()\n      .required(\"is required\"),\n    password: Yup.string().required(\"is required\")\n  }),\n\n  handleSubmit(values, formikBag) {\n  // console.log(formikBag);\n  formikBag.props.signIn(values)\n//   .then(() => {formikBag.props.props.history.push(\"/mytech\")});\n  }\n\n})(LogFrm);\n\n\n\n\n// const mapPropsToState= (state) => ({\n//   ...state,\n//   user: state.authReducer.user\n// })\n\n\nexport default connect(null, {signIn})(LoginForm);"]},"metadata":{},"sourceType":"module"}